---
- name: Ensure Docker service is running
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Create postgresql directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  loop:
    - "/opt/postgresql"
    - "{{ postgresql_data_dir }}"
    - "{{ postgresql_init_dir }}"

- name: Create backup directory
  file:
    path: "{{ postgresql_backup_dir }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  when: postgresql_enable_backups

- name: Create database init script
  template:
    src: init-db.sql.j2
    dest: "{{ postgresql_init_dir }}/init-db.sql"
    mode: "0644"

- name: Create postgresql docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: /opt/postgresql/docker-compose.yml
    mode: "0644"
  notify: restart postgresql

- name: Start postgresql using docker compose
  shell: |
    cd /opt/postgresql
    docker compose up -d
  register: compose_result
  changed_when: "'Started' in compose_result.stderr or 'Creating' in compose_result.stderr"

- name: Display PostgreSQL access information
  debug:
    msg:
      - "PostgreSQL is now running!"
      - "Connection details:"
      - "  Host: {{ ansible_host }}"
      - "  Port: {{ postgresql_port }}"
      - "  Superuser: {{ postgresql_superuser }}"
      - "  Default Database: {{ postgresql_default_db }}"
      - "  Default User: {{ postgresql_default_user }}"
      - ""
      - "Connection string: postgresql://{{ postgresql_default_user }}:PASSWORD@{{ ansible_host }}:{{ postgresql_port }}/{{ postgresql_default_db }}"

- name: Wait a moment for Portainer to start
  pause:
    seconds: 5
